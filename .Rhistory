# Load necessary packages
library(readxl)
library(tidyr)
library(dplyr)
library(naniar)
library(lubridate)
# Create file paths
setwd("E:/Hernandez et al. 2024 Final Paper")
outputsFolder <- file.path("E:/Hernandez et al. 2024 Final Paper/Outputs")
dataFolder <- file.path("E:/Hernandez et al. 2024 Final Paper/Raw Data")
# rp_data <- read_excel("E:/Hernandez et al. 2024 Final Paper/Raw Data/Raw_Data_Final_n911_JHT.xlsx")
rp_data <- read_excel(file.path(dataFolder, "Raw_Data_Final_n911_JHT.xlsx"))
# Renaming columns for ease of use
colnames(rp_data) <- c("ID", "START", "END", "EMAIL", "NAME", paste0("CON_COMP_", 1:10), "CONSENT", "SEX", "GENDER", "SEX_ORIENT",
"AGE", "HISP_ORIG", "RACE", "MARITAL_STAT", "MUNIC", "INCOME_YR", "EMPLOY", "OTHR_EMPLOY", "WRK_HRS_WK",
"LOST_JOB_CV19", "GOV_ASSIST_", "ACA_YR", "CRD_HRS", "FACUL", "ACA_LVL", "GPA_SR", "UNIV_ECON_AST", "TECH_ACSS",
"DIFF_ACSS", "PART_DROP", "EDUC_MOD", "PREEX_COND", "DEP_HIST", "DEP_TRT", "ANX_HIST", "ANX_TRT", "CV19_HIST",
"VAX_STAT", "VAX_TYPE", "VAX_DOSE", paste0("PHQ", 1:9), "PHQ_FUNC", paste0("GAD", 1:7), paste0("COV", 1:6),
paste0("PSS", 1:10), paste0("TILS", 1:3), "SOC_MED", "SM_TIME_DAY", "SM_TIME_WK_YAM", "SM_REAS", "SM_TIME_DAY_BP",
"SM_TIME_W_BP_YAM", "SM_REAS_BP", "SM_IMP_QOL", "VID_GMS", "VG_TYPE", "VG_VIOL", "VG_TIME_DAY", "VG_TIME_WK_YAM",
"VG_TIME_DAY_YAM", "VG_TIME_WK_DP_YAM", "VG_TIME_DAY_DP_YAM", "VG_REAS", "VG_TIME_DAY_BP", "VG_REAS_BP",
"VG_IMP_QOL", "EXER_LAST7", "EXER_DAYS_IN_LAST7", "EXER_DURAT_MIN", "SLEEP_HRS", "EAT_OUT", "EAT_FRT", "EAT_VEG",
"ALC", "ALC_30", "NICOT", "NICOT_TYPE", "NICOT_30", "CANNA", "CANNA_30", "COCAINE", "COC_TYPE","COC_POWD_30", "CRACK_30",
"MED", "MED_TYPE", "MED_30", "HALUC", "HALUC_TYPE", "HALUC_30")
# Replace other answers considered to be NA
na <- c("Prefiero no contestar", "Prefiero no contestar;", "Prefiero no contestar;Nada;",
"Prefiero no contestar;Cáncer;","No se", "no se", "No sé", "no sé",
"Prefiero no contestar;Hipoglucemica;", "Prefiero no contestar;Ninguna;", "",
"No recuerdo", "No tengo una respuesta al momento", "No estoy segura",
"No tengo conocimiento actual", "3.40?", "No sé", ".", "3->")
rp_data <- replace_with_na_all(rp_data, ~.x %in% na)
# Eliminate variables no necessary or containing information not needed for analysis
# This information might be useful for future researchers, but so far we only need CONSENT and CRD_HRS to assess eligibility
rp_data <- rp_data[,-which(colnames(rp_data) %in% c("EMAIL","NAME",paste0("CON_COMP_", 1:10)))]
# ID
rp_data$ID <- c(1:nrow(rp_data))
# START
rp_data$START <- as.POSIXct(rp_data$START)
# END
rp_data$END <- as.POSIXct(rp_data$END)
# CONSENT
rp_data$CONSENT <- recode(rp_data$CONSENT, "No consiento a participar en este estudio de investigación." = 0, "Sí, libremente consiento a participar en este estudio de investigación. Al autorizar este consentimiento informado, no he renunciado a ninguno de mis derechos legales." = 1)
rp_data$CONSENT <- as.factor(rp_data$CONSENT)
# SEX
rp_data$SEX <- recode(rp_data$SEX, "Femenino" = "F", "Masculino" = "M", "género fluido" = "Other",
"Genero fluido" = "Other", "Género fluído" = "Other", "Bigender" = "Other",
"No-binario(a)" = "Other")
rp_data$SEX <- as.factor(rp_data$SEX)
# GENDER
rp_data$GENDER <- recode(rp_data$GENDER, "Femenino" = "F", "Masculino" = "M", "género fluido" = "Other",
"Genero fluido" = "Other", "Género fluído" = "Other", "Bigender" = "Other",
"No-binario(a)" = "Other")
rp_data$GENDER <- relevel(rp_data$GENDER, ref = "M")
rp_data$GENDER <- as.factor(rp_data$GENDER)
# SEX_ORIENT
table(rp_data$SEX_ORIENT)
rp_data$GENDER <- relevel(as.factor(rp_data$GENDER), ref = "M")
rp_data$GENDER <- as.factor(rp_data$GENDER)
# SEX_ORIENT
table(rp_data$SEX_ORIENT)
rp_data$SEX_ORIENT <- recode(rp_data$SEX_ORIENT, "Heterosexual" = "Hetero", "Homosexual" = "Non-Hetero", "Pansexual o queer" = "Non-Hetero", "asexual" = "Non-Hetero", "Asexual" = "Non-Hetero", "Bisexual" = "Non-Hetero", "Demisexual" = "Non-Hetero")
rp_data$SEX_ORIENT <- as.factor(rp_data$SEX_ORIENT)
# AGE
rp_data$AGE <- as.numeric(rp_data$AGE)
# Categorical AGE
rp_data$AGE_CAT <- cut(rp_data$AGE, breaks = c(16,18,21,26,58), labels = c("16-17","18-20","21-25","26-57"))
table(rp_data$AGE_CAT)
# HISP_ORIG
table(rp_data$HISP_ORIG, useNA = "always")
rp_data$HISP_ORIG <- recode(rp_data$HISP_ORIG,
"No, no soy de origen hispano, latino o español" = "Not Hispanic",
"Sí, cubano(a)" = "Cuban",
"Sí, dominicano(a)" = "Dominican",
"Sí, mexicano(a), mexicanoamericano(a), chicano(a)" = "Mexican",
"Sí, otro origen hispano, latino o español" = "Other Hispanic",
"Sí, puertorriqueño(a)" = "Puerto Rican")
# HISP_ORIG_BIN
table(rp_data$HISP_ORIG, useNA = "always")
rp_data$HISP_ORIG_BIN <- recode(rp_data$HISP_ORIG,
"No, no soy de origen hispano, latino o español" = "No",
"Sí, cubano(a)" = "Yes",
"Sí, dominicano(a)" = "Yes",
"Sí, mexicano(a), mexicanoamericano(a), chicano(a)" = "Yes",
"Sí, otro origen hispano, latino o español" = "Yes",
"Sí, puertorriqueño(a)" = "Yes")
# RACE
table(rp_data$RACE, useNA = "always")
rp_data$RACE <- recode(rp_data$RACE,
"Blanca" = "White",
"Negra o afroamericana " = "Black",
"China" = "Non-White",
"Japonesa" = "Non-White",
"Indígena de las Américas o nativa de Alaska" = "Non-White",
"Sí, puertorriqueño(a)" = "Yes")
# MARITAL_STAT
table(rp_data$MARITAL_STAT, useNA = "always")
rp_data$MARITAL_STAT <- recode(rp_data$MARITAL_STAT,
"Casado(a) o conviviendo" = "Married",
"Divorciado(a)" = "Divor/Wid",
"Soltero(a)" = "Single",
"Viudo(a)" = "Divor/Wid")
# MUNIC
table(rp_data$MUNIC, useNA = "always")
# Region of origin categories
# i.e. EAST, WEST, NORTH, SOUTH, METRO
rp_data$REGION_RES <-
ifelse(rp_data$MUNIC %in% c(
"Toa Baja","Toa Alta","Bayamón","Dorado","Vega Alta",
"Corozal","Orocovis","Barranquitas","Comerío","Naranjito",
"Cataño"),
"Bayamón",
ifelse(rp_data$MUNIC %in% c(
"Trujillo Alto","Carolina","Canóvanas",
"Loíza", "Guaynabo", "San Juan"),
"Metro",
ifelse(rp_data$MUNIC %in% c("Ceiba", "Fajardo",
"Rio Grande","Vieques","Culebra","Luquillo"),
"Fajardo",
ifelse(rp_data$MUNIC %in% c("Aguas Buenas",
"Caguas","Gurabo","Juncos","Las Piedras",
"Humacao","Yabucoa","Maunabo","San Lorenzo",
"Naguabo","Cayey","Aibonito","Cidra"),
"Caguas",
ifelse(rp_data$MUNIC %in% c("Patillas",
"Arroyo", "Guayama","Salinas","Coamo",
"Santa Isabel","Juana Díaz","Villalba",
"Ponce","Peñuelas","Guayanilla","Yauco",
"Guánica"),
"Ponce",
ifelse(rp_data$MUNIC %in% c("Morovis",
"Vega Baja","Manatí","Ciales","Barceloneta",
"Florida","Arecibo","Hatillo","Camuy","Lares",
"Quebradillas","Utuado"),
"Arecibo",
ifelse(rp_data$MUNIC %in% c("Isabela",
"San Sebastián","Moca","Aguadilla","Aguada",
"Añasco","Las Marías","Maricao","Sabana Grande",
"Lajas","Cabo Rojo","Hormigueros","Mayagüez",
"San Germán","Rincón"),
"Mayagüez", rp_data$MUNIC
)))))))
# INCOME_YR
table(rp_data$INCOME_YR, useNA = "always")
rp_data$INCOME_YR <- recode(rp_data$INCOME_YR,
"$25,000 - $49,999" = "$25,000+",
"$50,000 - $74,999" = "$25,000+",
"$75,000 - $99,999" = "$25,000+",
"$100,000 - $149,000" = "$25,000+")
rp_data$INCOME_YR <- as.factor(rp_data$INCOME_YR)
# EMPLOY
table(rp_data$EMPLOY)
rp_data$EMPLOY <- recode(rp_data$EMPLOY,
"Desempleado(a)" = "No",
"Empleado(a)" = "Yes",
"Discapacitado(a)" = "No",
"Trabajo por cuenta propia" = "SelfEmp",
"Retirado(a)" = "No")
rp_data$EMPLOY <- as.factor(rp_data$EMPLOY)
# OTHR_EMPLOY
table(rp_data$OTHR_EMPLOY, useNA = "always")
rp_data$OTHR_EMPLOY <- recode(rp_data$OTHR_EMPLOY,
"No aplica" = "No",
"Sí" = "Yes")
rp_data$OTHR_EMPLOY <- ifelse(rp_data$EMPLOY == "No" & is.na(rp_data$OTHR_EMPLOY),
"No", rp_data$OTHR_EMPLOY)
rp_data$OTHR_EMPLOY <- as.factor(rp_data$OTHR_EMPLOY)
# WRK_HRS_WK
table(rp_data$WRK_HRS_WK, useNA = "always")
rp_data$WRK_HRS_WK <- recode(rp_data$WRK_HRS_WK,
"Más de 40" = ">40")
rp_data$WRK_HRS_WK <- ifelse(rp_data$EMPLOY == "No" & is.na(rp_data$WRK_HRS_WK),
"No", rp_data$WRK_HRS_WK)
rp_data$WRK_HRS_WK <- as.factor(rp_data$WRK_HRS_WK)
# LOST_JOB_CV19
table(rp_data$LOST_JOB_CV19, useNA = "always")
rp_data$LOST_JOB_CV19 <- recode(rp_data$LOST_JOB_CV19,
"Sí" = "Yes")
rp_data$LOST_JOB_CV19 <- as.factor(rp_data$LOST_JOB_CV19)
# GOV_ASSIST
table(rp_data$GOV_ASSIST, useNA = "always")
# ACA_YR
table(rp_data$ACA_YR, useNA = "always")
rp_data$ACA_YR <- recode(rp_data$ACA_YR,
"1ero" = "1",
"2do" = "2",
"3ro" = "3",
"4to" = "4",
"5to" = "5+",
"6to" = "5+",
"7mo o más" = "5+")
rp_data$ACA_YR <- as.factor(rp_data$ACA_YR)
# CRD_HRS
table(rp_data$CRD_HRS)
rp_data$CRD_HRS <- recode(rp_data$CRD_HRS, "16 o mas" = "16+",
"mas de 21" = "16+",
"No estoy matriculado(a) actualmente" = "0")
rp_data$CRD_HRS <- as.ordered(rp_data$CRD_HRS)
# FACUL
table(rp_data$FACUL, useNA = "always")
rp_data$FACUL <- recode(rp_data$FACUL,
"Ciencias y Tecnologías de la Información" = "Comunicacion",
"Comunicación" = "Comunicacion",
"Administración de Empresas" = "Administracion de Empresas",
"Planificación" = "Planificacion")
rp_data$FACUL <- as.factor(rp_data$FACUL)
# ACA_LVL
rp_data$ACA_LVL <- recode(rp_data$ACA_LVL, "Bachillerato" = "BA", "Grado asociado" = "ASSOC", "Maestría" = "MAST", "Doctorado" = "DOC", "Juris Doctor" = "DOC")
rp_data$ACA_LVL <- as.factor(rp_data$ACA_LVL)
# ACA_LVL - Binary
rp_data$ACA_LVL_BI <- recode(rp_data$ACA_LVL, "BA" = "SUB", "ASSOC" = "SUB", "MAST" = "GRAD", "DOC" = "GRAD")
rp_data$ACA_LVL_BI <- as.factor(rp_data$ACA_LVL_BI)
# GPA_SR
table(rp_data$GPA_SR)
rp_data$GPA_SR <- recode(rp_data$GPA_SR,
"4.00 escolar" = "4.00",
"361" = "3.61",
"+3.50" = "3.50",
"3. 5" = "3.50",
"3. 94" = "3.94",
"3.95 - 4.00" = "3.98",
"4,00" = "4.00",
"Current: 4.00 Cumulative: 3.129" = "4.00")
# rp_data$GPA_SR <- replace(rp_data$GPA_SR, list = c(which(rp_data$GPA_SR == "No se")), NA)
rp_data$GPA_SR <- as.numeric(rp_data$GPA_SR)
# UNIV_ECON_AST
table(rp_data$UNIV_ECON_AST, useNA = "always")
rp_data$UNIV_ECON_AST <- recode(rp_data$UNIV_ECON_AST,
"Sí" = "Yes")
rp_data$UNIV_ECON_AST <- as.factor(rp_data$UNIV_ECON_AST)
# TECH_ACSS
table(rp_data$TECH_ACSS, useNA = "always")
# DIFF_ACSS
table(rp_data$DIFF_ACSS, useNA = "always")
rp_data$DIFF_ACSS <- recode(rp_data$DIFF_ACSS,
"Sí" = "Yes")
rp_data$DIFF_ACSS <- as.factor(rp_data$DIFF_ACSS)
# PART_DROP
table(rp_data$PART_DROP, useNA = "always")
rp_data$PART_DROP <- recode(rp_data$PART_DROP,
"Sí" = "Yes")
rp_data$PART_DROP <- as.factor(rp_data$PART_DROP)
# EDUC_MOD
table(rp_data$EDUC_MOD, useNA = "always")
# PREEX_COND
table(rp_data$PREEX_COND, useNA = "always")
# DEP_HIST
rp_data$DEP_HIST <- recode(rp_data$DEP_HIST, "Sí" = "Yes")
rp_data$DEP_HIST <- as.factor(rp_data$DEP_HIST)
# DEP_TRT
table(rp_data$DEP_TRT, useNA = "always")
# ANX_HIST
rp_data$ANX_HIST <- recode(rp_data$ANX_HIST, "Sí" = "Yes")
rp_data$ANX_HIST <- as.factor(rp_data$ANX_HIST)
# ANX_TRT
table(rp_data$ANX_TRT, useNA = "always")
# CV19_HIST
table(rp_data$CV19_HIST, useNA = "always")
# VAX_STAT
table(rp_data$VAX_STAT, useNA = "always")
rp_data$VAX_STAT <- recode(rp_data$VAX_STAT, "Sí" = "Yes")
rp_data$VAX_STAT <- as.factor(rp_data$VAX_STAT)
# VAX_TYPE
table(rp_data$VAX_TYPE, useNA = "always")
rp_data$VAX_TYPE <- ifelse(rp_data$VAX_STAT == "No", "No Vax", rp_data$VAX_TYPE)
rp_data$VAX_TYPE <- as.factor(rp_data$VAX_TYPE)
# VAX_DOSE
table(rp_data$VAX_DOSE, useNA = "always")
rp_data$VAX_DOSE <- ifelse(rp_data$VAX_STAT == "No", "None", rp_data$VAX_DOSE)
rp_data$VAX_DOSE <- as.factor(rp_data$VAX_DOSE)
# PHQ9
rp_data$PHQ1 <- recode(rp_data$PHQ1, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ2 <- recode(rp_data$PHQ2, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ3 <- recode(rp_data$PHQ3, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ4 <- recode(rp_data$PHQ4, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ5 <- recode(rp_data$PHQ5, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ6 <- recode(rp_data$PHQ6, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ7 <- recode(rp_data$PHQ7, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ8 <- recode(rp_data$PHQ8, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ9 <- recode(rp_data$PHQ9, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ1 <- as.numeric(rp_data$PHQ1)
rp_data$PHQ2 <- as.numeric(rp_data$PHQ2)
rp_data$PHQ3 <- as.numeric(rp_data$PHQ3)
rp_data$PHQ4 <- as.numeric(rp_data$PHQ4)
rp_data$PHQ5 <- recode(rp_data$PHQ5, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ6 <- recode(rp_data$PHQ6, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ7 <- recode(rp_data$PHQ7, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ8 <- recode(rp_data$PHQ8, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ9 <- recode(rp_data$PHQ9, "No, para nada (1)" = 0, "Varios días (2)" = 1, "Durante más de la mitad de los días (3)" = 2, "Casi todos los días (4)" = 3)
rp_data$PHQ1 <- as.numeric(rp_data$PHQ1)
rp_data$PHQ2 <- as.numeric(rp_data$PHQ2)
rp_data$PHQ3 <- as.numeric(rp_data$PHQ3)
rp_data$PHQ4 <- as.numeric(rp_data$PHQ4)
rp_data$PHQ5 <- as.numeric(rp_data$PHQ5)
rp_data$PHQ6 <- as.numeric(rp_data$PHQ6)
rp_data$PHQ7 <- as.numeric(rp_data$PHQ7)
rp_data$PHQ8 <- as.numeric(rp_data$PHQ8)
rp_data$PHQ9 <- as.numeric(rp_data$PHQ9)
# PHQ_FUNC
table(rp_data$PHQ_FUNC, useNA = "always")
rp_data$PHQ_FUNC <- recode(rp_data$PHQ_FUNC,
"No ha sido difícil  (1)" = 1,
"Algo difícil (2)" = 2,
"Muy difícil (3)" = 3,
"Extremadamente difícil (4)" = 4)
# rp_data <- read_excel("E:/Hernandez et al. 2024 Final Paper/Raw Data/Raw_Data_Final_n911_JHT.xlsx")
rp_data <- read_excel(file.path(dataFolder, "Raw_Data_Final_n911_JHT.xlsx"))
# View(rp_data)
# Renaming columns for ease of use
colnames(rp_data) <- c("ID", "START", "END", "EMAIL", "NAME", paste0("CON_COMP_", 1:10), "CONSENT", "SEX", "GENDER", "SEX_ORIENT",
"AGE", "HISP_ORIG", "RACE", "MARITAL_STAT", "MUNIC", "INCOME_YR", "EMPLOY", "OTHR_EMPLOY", "WRK_HRS_WK",
"LOST_JOB_CV19", "GOV_ASSIST_", "ACA_YR", "CRD_HRS", "FACUL", "ACA_LVL", "GPA_SR", "UNIV_ECON_AST", "TECH_ACSS",
"DIFF_ACSS", "PART_DROP", "EDUC_MOD", "PREEX_COND", "DEP_HIST", "DEP_TRT", "ANX_HIST", "ANX_TRT", "CV19_HIST",
"VAX_STAT", "VAX_TYPE", "VAX_DOSE", paste0("PHQ", 1:9), "PHQ_FUNC", paste0("GAD", 1:7), paste0("COV", 1:6),
paste0("PSS", 1:10), paste0("TILS", 1:3), "SOC_MED", "SM_TIME_DAY", "SM_TIME_WK_YAM", "SM_REAS", "SM_TIME_DAY_BP",
"SM_TIME_W_BP_YAM", "SM_REAS_BP", "SM_IMP_QOL", "VID_GMS", "VG_TYPE", "VG_VIOL", "VG_TIME_DAY", "VG_TIME_WK_YAM",
"VG_TIME_DAY_YAM", "VG_TIME_WK_DP_YAM", "VG_TIME_DAY_DP_YAM", "VG_REAS", "VG_TIME_DAY_BP", "VG_REAS_BP",
"VG_IMP_QOL", "EXER_LAST7", "EXER_DAYS_IN_LAST7", "EXER_DURAT_MIN", "SLEEP_HRS", "EAT_OUT", "EAT_FRT", "EAT_VEG",
"ALC", "ALC_30", "NICOT", "NICOT_TYPE", "NICOT_30", "CANNA", "CANNA_30", "COCAINE", "COC_TYPE","COC_POWD_30", "CRACK_30",
"MED", "MED_TYPE", "MED_30", "HALUC", "HALUC_TYPE", "HALUC_30")
# Replace other answers considered to be NA
na <- c("Prefiero no contestar", "Prefiero no contestar;", "Prefiero no contestar;Nada;",
"Prefiero no contestar;Cáncer;","No se", "no se", "No sé", "no sé",
"Prefiero no contestar;Hipoglucemica;", "Prefiero no contestar;Ninguna;", "",
"No recuerdo", "No tengo una respuesta al momento", "No estoy segura",
"No tengo conocimiento actual", "3.40?", "No sé", ".", "3->")
rp_data <- replace_with_na_all(rp_data, ~.x %in% na)
# Evaluating data structure
str(rp_data)
# Eliminate variables no necessary or containing information not needed for analysis
# This information might be useful for future researchers, but so far we only need CONSENT and CRD_HRS to assess eligibility
rp_data <- rp_data[,-which(colnames(rp_data) %in% c("EMAIL","NAME",paste0("CON_COMP_", 1:10)))]
# PHQ_FUNC
table(rp_data$PHQ_FUNC, useNA = "always")
rp_data$PHQ_FUNC <- recode(rp_data$PHQ_FUNC,
"No ha sido difícil  (1)" = 1,
"Algo difícil (2)" = 2,
"Muy difícil (3)" = 3,
"Extremadamente difícil (4)" = 4)
source("E:/Hernandez et al. 2024 Final Paper/Scripts/01 Data Prepping.R", echo=TRUE)
# PHQ_FUNC
table(rp_data$PHQ_FUNC, useNA = "always")
# rp_data <- read_excel("E:/Hernandez et al. 2024 Final Paper/Raw Data/Raw_Data_Final_n911_JHT.xlsx")
rp_data <- read_excel(file.path(dataFolder, "Raw_Data_Final_n911_JHT.xlsx"))
# Renaming columns for ease of use
colnames(rp_data) <- c("ID", "START", "END", "EMAIL", "NAME", paste0("CON_COMP_", 1:10), "CONSENT", "SEX", "GENDER", "SEX_ORIENT",
"AGE", "HISP_ORIG", "RACE", "MARITAL_STAT", "MUNIC", "INCOME_YR", "EMPLOY", "OTHR_EMPLOY", "WRK_HRS_WK",
"LOST_JOB_CV19", "GOV_ASSIST_", "ACA_YR", "CRD_HRS", "FACUL", "ACA_LVL", "GPA_SR", "UNIV_ECON_AST", "TECH_ACSS",
"DIFF_ACSS", "PART_DROP", "EDUC_MOD", "PREEX_COND", "DEP_HIST", "DEP_TRT", "ANX_HIST", "ANX_TRT", "CV19_HIST",
"VAX_STAT", "VAX_TYPE", "VAX_DOSE", paste0("PHQ", 1:9), "PHQ_FUNC", paste0("GAD", 1:7), paste0("COV", 1:6),
paste0("PSS", 1:10), paste0("TILS", 1:3), "SOC_MED", "SM_TIME_DAY", "SM_TIME_WK_YAM", "SM_REAS", "SM_TIME_DAY_BP",
"SM_TIME_W_BP_YAM", "SM_REAS_BP", "SM_IMP_QOL", "VID_GMS", "VG_TYPE", "VG_VIOL", "VG_TIME_DAY", "VG_TIME_WK_YAM",
"VG_TIME_DAY_YAM", "VG_TIME_WK_DP_YAM", "VG_TIME_DAY_DP_YAM", "VG_REAS", "VG_TIME_DAY_BP", "VG_REAS_BP",
"VG_IMP_QOL", "EXER_LAST7", "EXER_DAYS_IN_LAST7", "EXER_DURAT_MIN", "SLEEP_HRS", "EAT_OUT", "EAT_FRT", "EAT_VEG",
"ALC", "ALC_30", "NICOT", "NICOT_TYPE", "NICOT_30", "CANNA", "CANNA_30", "COCAINE", "COC_TYPE","COC_POWD_30", "CRACK_30",
"MED", "MED_TYPE", "MED_30", "HALUC", "HALUC_TYPE", "HALUC_30")
# Replace other answers considered to be NA
na <- c("Prefiero no contestar", "Prefiero no contestar;", "Prefiero no contestar;Nada;",
"Prefiero no contestar;Cáncer;","No se", "no se", "No sé", "no sé",
"Prefiero no contestar;Hipoglucemica;", "Prefiero no contestar;Ninguna;", "",
"No recuerdo", "No tengo una respuesta al momento", "No estoy segura",
"No tengo conocimiento actual", "3.40?", "No sé", ".", "3->")
rp_data <- replace_with_na_all(rp_data, ~.x %in% na)
# Evaluating data structure
str(rp_data)
# Eliminate variables no necessary or containing information not needed for analysis
# This information might be useful for future researchers, but so far we only need CONSENT and CRD_HRS to assess eligibility
rp_data <- rp_data[,-which(colnames(rp_data) %in% c("EMAIL","NAME",paste0("CON_COMP_", 1:10)))]
# PHQ_FUNC
table(rp_data$PHQ_FUNC, useNA = "always")
which(rp_data$PHQ_FUNC == "No ha sido difícil  (1)")
which(rp_data$PHQ_FUNC == " No ha sido difícil  (1)")
which(rp_data$PHQ_FUNC == "No ha sido difícil (1)")
which(rp_data$PHQ_FUNC == "Muy difícil (3)")
rp_data$PHQ_FUNC[2]
rp_data$PHQ_FUNC[2] == "Algo difícil (2)"
?separate()
grep(";", rp_data$TECH_ACSS, ignore.case = T)
lapply(rp_data$TECH_ACSS, function(x) grep(";", x, ignore.case = T)
lapply(rp_data$TECH_ACSS, function(x) grep(";", x, ignore.case = T))
lapply(rp_data$TECH_ACSS, function(x) grep(";", x, ignore.case = T))
lapply(rp_data$TECH_ACSS, function(x) string(x, ";"))
lapply(rp_data$TECH_ACSS, function(x) stringr::str_count(x, ";"))
sep_multi_resp <- function(data, col){
ifelse(!require(tidyr) & !require(stringr),
install.packages("tidyr"); install.packages("stringr"),
library(tidyr); library(stringr))
separate(data, col, paste(col, 1:str_count(col, ";"), sep="_"), sep=";")
}
sep_multi_resp <- function(data, col){
ifelse(!require(tidyr) & !require(stringr),
install.packages("tidyr")
install.packages("stringr"),
library(tidyr)
library(stringr)
)
separate(data, col, paste(col, 1:str_count(col, ";"), sep="_"), sep=";")
}
