# Load data
ebpas <- read_excel("E:/CFA_Natalia_MGH/Christian's workbook.xlsx", sheet = "JHT")
# Load necessary packages
# library(haven)
library(readxl)
library(MVN)
library(ggplot2)
library(reshape2)
library(psych)
library(lavaan)
library(lavaanPlot)
library(semTools)
library(semPlot)
# Load data
ebpas <- read_excel("E:/CFA_Natalia_MGH/Christian's workbook.xlsx", sheet = "JHT")
# Transforming indicators to numeric to facilitate scoring
#$UserLanguage <- as.factor(ebpas_spss$UserLanguage)
ebpas$EBPAS1  <- as.numeric(ebpas$EBPAS1)
ebpas$EBPAS2  <- as.numeric(ebpas$EBPAS2)
ebpas$EBPAS3  <- as.numeric(ebpas$EBPAS3)
ebpas$EBPAS4  <- as.numeric(ebpas$EBPAS4)
ebpas$EBPAS5  <- as.numeric(ebpas$EBPAS5)
ebpas$EBPAS6  <- as.numeric(ebpas$EBPAS6)
ebpas$EBPAS7  <- as.numeric(ebpas$EBPAS7)
ebpas$EBPAS8  <- as.numeric(ebpas$EBPAS8)
ebpas$EBPAS9  <- as.numeric(ebpas$EBPAS9)
ebpas$EBPAS10 <- as.numeric(ebpas$EBPAS10)
ebpas$EBPAS11 <- as.numeric(ebpas$EBPAS11)
ebpas$EBPAS12 <- as.numeric(ebpas$EBPAS12)
ebpas$EBPAS13 <- as.numeric(ebpas$EBPAS13)
ebpas$EBPAS14 <- as.numeric(ebpas$EBPAS14)
ebpas$EBPAS15 <- as.numeric(ebpas$EBPAS15)
# Checking for multivariate normality #
mvn(ebpas[,1:15])
# Load necessary package(s)
library(MBESS)
# Load necessary package(s)
install.packages("MBESS")
# Load necessary package(s)
install.packages("MBESS")
library(MBESS)
setInternet2(TRUE)
.libPaths()
library(MBESS)
# Load necessary packages
# library(haven)
library(readxl)
library(MVN)
library(ggplot2)
library(reshape2)
library(psych)
library(lavaan)
library(lavaanPlot)
library(semTools)
library(semPlot)
library(simsem)
# Load data
ebpas <- read_excel("E:/CFA_Natalia_MGH/Christian's workbook.xlsx", sheet = "JHT")
# Transforming indicators to numeric to facilitate scoring
#$UserLanguage <- as.factor(ebpas_spss$UserLanguage)
ebpas$EBPAS1  <- as.numeric(ebpas$EBPAS1)
ebpas$EBPAS2  <- as.numeric(ebpas$EBPAS2)
ebpas$EBPAS3  <- as.numeric(ebpas$EBPAS3)
ebpas$EBPAS4  <- as.numeric(ebpas$EBPAS4)
ebpas$EBPAS5  <- as.numeric(ebpas$EBPAS5)
ebpas$EBPAS6  <- as.numeric(ebpas$EBPAS6)
ebpas$EBPAS7  <- as.numeric(ebpas$EBPAS7)
ebpas$EBPAS8  <- as.numeric(ebpas$EBPAS8)
ebpas$EBPAS9  <- as.numeric(ebpas$EBPAS9)
ebpas$EBPAS10 <- as.numeric(ebpas$EBPAS10)
ebpas$EBPAS11 <- as.numeric(ebpas$EBPAS11)
ebpas$EBPAS12 <- as.numeric(ebpas$EBPAS12)
ebpas$EBPAS13 <- as.numeric(ebpas$EBPAS13)
ebpas$EBPAS14 <- as.numeric(ebpas$EBPAS14)
ebpas$EBPAS15 <- as.numeric(ebpas$EBPAS15)
# omega REQ = 0.9112487 (0.8733059 - 0.9386268)
set.seed(31)
req_boot <- ci.reliability(ebpas[, c(11:13)], interval.type = "bsil",
type = "categorical", B = 500, conf.level = 0.95)
req_boot
# omega APP = 0.8026449 (0.7523411 - 0.8448384)
set.seed(32)
app_boot <- ci.reliability(ebpas[, c(9:10,14:15)], interval.type = "bsil",
type = "categorical", B = 500, conf.level = 0.95)
app_boot
# omega OPEN = 0.8414283 (0.802625 - 0.8738024)
set.seed(33)
open_boot <- ci.reliability(ebpas[, c(1,2,4,8)], interval.type = "bsil",
type = "categorical", B = 500, conf.level = 0.95)
open_boot
req_boot
app_boot
open_boot
# omega DIV = 0.7144023 (0.6429432 - 0.7765307)
set.seed(34)
div_boot <- ci.reliability(ebpas[, c(3,5,6,7)], interval.type = "bsil",
type = "categorical", B = 500, conf.level = 0.95)
div_boot
cfm <- "REQ =~ EBPAS11 + EBPAS12 + EBPAS13
APPEAL =~ EBPAS9 + EBPAS10 + EBPAS14 + EBPAS15
OPEN =~ EBPAS1 + EBPAS2 + EBPAS4 + EBPAS8
DIV =~ EBPAS3 + EBPAS5 + EBPAS6 + EBPAS7
"
cf.mod1 <- cfa(cfm, data = ebpas[,1:15], estimator = "dwls", std.lv = TRUE,
ordered = paste0("EBPAS", 1:15))
summary(cf.mod1, fit.measures = T, rsquare = T)
# omega DIV = 0.7144023 (0.6419366 - 0.7772902)
#             SE: 0.03467378
set.seed(34)
div_boot <- ci.reliability(ebpas[, c(3,5,6,7)], interval.type = "bsil",
type = "categorical", B = 1000, conf.level = 0.95)
div_boot
# Total scale
set.seed(35)
tot_boot <- ci.reliability(ebpas[, c(1:15)], interval.type = "bsil",
type = "categorical", B = 500, conf.level = 0.95)
tot_boot
# Load necessary packages
# library(haven)
library(readxl)
library(MVN)
library(ggplot2)
library(reshape2)
library(psych)
library(lavaan)
library(lavaanPlot)
library(semTools)
library(semPlot)
library(simsem)
# Load data
ebpas <- read_excel("E:/CFA_Natalia_MGH/Christian's workbook.xlsx", sheet = "JHT")
# Transforming indicators to numeric to facilitate scoring
#$UserLanguage <- as.factor(ebpas_spss$UserLanguage)
ebpas$EBPAS1  <- as.numeric(ebpas$EBPAS1)
ebpas$EBPAS2  <- as.numeric(ebpas$EBPAS2)
ebpas$EBPAS3  <- as.numeric(ebpas$EBPAS3)
ebpas$EBPAS4  <- as.numeric(ebpas$EBPAS4)
ebpas$EBPAS5  <- as.numeric(ebpas$EBPAS5)
ebpas$EBPAS6  <- as.numeric(ebpas$EBPAS6)
ebpas$EBPAS7  <- as.numeric(ebpas$EBPAS7)
ebpas$EBPAS8  <- as.numeric(ebpas$EBPAS8)
ebpas$EBPAS9  <- as.numeric(ebpas$EBPAS9)
ebpas$EBPAS10 <- as.numeric(ebpas$EBPAS10)
ebpas$EBPAS11 <- as.numeric(ebpas$EBPAS11)
ebpas$EBPAS12 <- as.numeric(ebpas$EBPAS12)
ebpas$EBPAS13 <- as.numeric(ebpas$EBPAS13)
ebpas$EBPAS14 <- as.numeric(ebpas$EBPAS14)
ebpas$EBPAS15 <- as.numeric(ebpas$EBPAS15)
# Scoring subscales and total scale
ebpas$REQ <- rowSums(ebpas[,11:13])
ebpas$APPEAL <- rowSums(ebpas[,c(9:10,14:15)])
ebpas$OPEN <- rowSums(ebpas[,c(1:2,4,8)])
ebpas$DIV <- rowSums(ebpas[,c(3,5:7)])
ebpas$TOTAL <- rowSums(ebpas[,c(1:15)])
# Total subscale
summary(ebpas$TOTAL)
sd(ebpas$TOTAL)
# Item-total correlations and total scale internal consistency #
alpha(ebpas[,1:15], check.keys = T)
cfm <- "REQ =~ EBPAS11 + EBPAS12 + EBPAS13
APPEAL =~ EBPAS9 + EBPAS10 + EBPAS14 + EBPAS15
OPEN =~ EBPAS1 + EBPAS2 + EBPAS4 + EBPAS8
DIV =~ EBPAS3 + EBPAS5 + EBPAS6 + EBPAS7
"
cf.mod1 <- cfa(cfm, data = ebpas[,1:15], estimator = "dwls", std.lv = TRUE,
ordered = paste0("EBPAS", 1:15))
summary(cf.mod1, fit.measures = T, rsquare = T)
cfm2 <- "REQ =~ EBPAS11 + EBPAS12 + EBPAS13
APPEAL =~ EBPAS9 + EBPAS10 + EBPAS14 + EBPAS15
EBPAS9 ~~ EBPAS10
OPEN =~ EBPAS1 + EBPAS2 + EBPAS4 + EBPAS8
DIV =~ EBPAS3 + EBPAS5 + EBPAS6 + EBPAS7
"
cf.mod2 <- cfa(cfm2, data = ebpas[,1:15], estimator = "dwls", std.lv = TRUE,
ordered = paste0("EBPAS", 1:15))
summary(cf.mod2, fit.measures = T, rsquare = T)
# Load necessary packages
# library(haven)
library(readxl)
library(MVN)
library(ggplot2)
library(reshape2)
library(psych)
library(lavaan)
library(lavaanPlot)
library(semTools)
library(semPlot)
library(simsem)
# Load data
ebpas <- read_excel("E:/CFA_Natalia_MGH/Christian's workbook.xlsx", sheet = "JHT")
# Transforming indicators to numeric to facilitate scoring
#$UserLanguage <- as.factor(ebpas_spss$UserLanguage)
ebpas$EBPAS1  <- as.numeric(ebpas$EBPAS1)
ebpas$EBPAS2  <- as.numeric(ebpas$EBPAS2)
ebpas$EBPAS3  <- as.numeric(ebpas$EBPAS3)
ebpas$EBPAS4  <- as.numeric(ebpas$EBPAS4)
ebpas$EBPAS5  <- as.numeric(ebpas$EBPAS5)
ebpas$EBPAS6  <- as.numeric(ebpas$EBPAS6)
ebpas$EBPAS7  <- as.numeric(ebpas$EBPAS7)
ebpas$EBPAS8  <- as.numeric(ebpas$EBPAS8)
ebpas$EBPAS9  <- as.numeric(ebpas$EBPAS9)
ebpas$EBPAS10 <- as.numeric(ebpas$EBPAS10)
ebpas$EBPAS11 <- as.numeric(ebpas$EBPAS11)
ebpas$EBPAS12 <- as.numeric(ebpas$EBPAS12)
ebpas$EBPAS13 <- as.numeric(ebpas$EBPAS13)
ebpas$EBPAS14 <- as.numeric(ebpas$EBPAS14)
ebpas$EBPAS15 <- as.numeric(ebpas$EBPAS15)
# Scoring subscales and total scale
ebpas$REQ <- rowSums(ebpas[,11:13])
ebpas$APPEAL <- rowSums(ebpas[,c(9:10,14:15)])
ebpas$OPEN <- rowSums(ebpas[,c(1:2,4,8)])
ebpas$DIV <- rowSums(ebpas[,c(3,5:7)])
ebpas$TOTAL <- rowSums(ebpas[,c(1:15)])
# Requirement subscale
summary(ebpas$REQ)
cfm <- "REQ =~ EBPAS11 + EBPAS12 + EBPAS13
APPEAL =~ EBPAS9 + EBPAS10 + EBPAS14 + EBPAS15
OPEN =~ EBPAS1 + EBPAS2 + EBPAS4 + EBPAS8
DIV =~ EBPAS3 + EBPAS5 + EBPAS6 + EBPAS7
"
cf.mod1 <- cfa(cfm, data = ebpas[,1:15], estimator = "dwls", std.lv = TRUE,
ordered = paste0("EBPAS", 1:15))
fitmeasures(cf.mod1, fit.measures = c("chisq", "df", "pvalue", "cfi", "rmsea", "srmr"))
cfm2 <- "REQ =~ EBPAS11 + EBPAS12 + EBPAS13
APPEAL =~ EBPAS9 + EBPAS10 + EBPAS14 + EBPAS15
EBPAS9 ~~ EBPAS10
OPEN =~ EBPAS1 + EBPAS2 + EBPAS4 + EBPAS8
DIV =~ EBPAS3 + EBPAS5 + EBPAS6 + EBPAS7
"
cf.mod2 <- cfa(cfm2, data = ebpas[,1:15], estimator = "dwls", std.lv = TRUE,
ordered = paste0("EBPAS", 1:15))
fitmeasures(cf.mod2, fit.measures = c("chisq", "df", "pvalue", "cfi", "rmsea", "srmr"))
delta_chi2 <- 245.461 - 212.270
delta_df <- 84-83
pchisq(delta_chi2, delta_df)
library(readr)
Clean_rp_data_092023 <- read_csv("E:/Hernandez et al. 2024 Final Paper/Outputs/Clean_rp_data_092023.csv")
View(Clean_rp_data_092023)
data <- Clean_rp_data_092023[, c(paste0("PHQ", 1:9),
setwd(file.path("E:/Hernandez et al. 2024 Final Paper/Scripts")
data <- Clean_rp_data_092023[, c(paste0("PHQ", 1:9),
setwd(file.path("E:/Hernandez et al. 2024 Final Paper/Scripts"))
library(readr)
Clean_rp_data_092023 <- read_csv("E:/Hernandez et al. 2024 Final Paper/Outputs/Clean_rp_data_092023.csv")
data <- Clean_rp_data_092023[, c(paste0("PHQ", 1:9),
data <- Clean_rp_data_092023[, c(paste0("PHQ", 1:9),
paste0("GAD", 1:7),
paste0("PSS", 1::10))]
data <- Clean_rp_data_092023[, c(paste0("PHQ", 1:9),
paste0("GAD", 1:7),
paste0("PSS", 1:10))]
head(data)
dat <- na.omit(data)
library(lavaan)
library(lavaanPlot)
# Data cleaning
dat <- apply(dat, MARGIN = 2, as.numeric())
# Data cleaning
dat <- apply(dat, MARGIN = 2, as.numeric)
head(data)
head(dat)
table(dat$PSS1)
# Data cleaning
dat <- apply(dat, MARGIN = 2, as.ordered)
table(dat$PSS1)
table(dat[,"PSS1"])
table(dat[,"GAD1"])
data <- Clean_rp_data_092023[, c(paste0("PHQ", 1:9),
paste0("GAD", 1:7))]
# Data cleaning
dat <- apply(dat, MARGIN = 2, as.ordered)
dat <- na.omit(data)
Clean_rp_data_092023 <- read_csv("E:/Hernandez et al. 2024 Final Paper/Outputs/Clean_rp_data_092023.csv")
data <- Clean_rp_data_092023[, c(paste0("PHQ", 1:9),
paste0("GAD", 1:7))]
# Data cleaning
dat <- apply(dat, MARGIN = 2, as.ordered)
dat <- na.omit(data)
mod1 <- cfa(mm4, dat, estimator = "dwls", std.lv = T)
# single factor model
mm1 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9 +
GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7"
mod1 <- cfa(mm1, dat, estimator = "dwls", std.lv = T)
summary(mod1, fit.measures = T)
BIC(mod1)
library(MVN)
# three-factor model
mm2 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9
f2 =~ GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7"
mod2 <- cfa(mm2, dat, estimator = "dwls", std.lv = T)
summary(mod2, fit.measures = T)
# correlated factor model
mm3 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9
f2 =~ GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7
f1 ~~ f2"
mod3 <- cfa(mm3, dat, estimator = "dwls", std.lv = T)
summary(mod3, fit.measures = T)
# hierarchical factor model
mm4 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9
f2 =~ GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7
g ~~ f1 + f2"
# hierarchical factor model
mm4 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9
f2 =~ GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7
g =~ f1 + f2"
mod4 <- cfa(mm4, dat, estimator = "dwls", std.lv = T)
# bifactor model
mm5 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9
f2 =~ GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7
g =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9 +
GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7"
mod5 <- cfa(mm5, dat, estimator = "dwls", std.lv = T)
summary(mod3, fit.measures = T)
fitmeasures(mod2)
fitmeasures(mod1, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
fitmeasures(mod2, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
fitmeasures(mod3, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
fitmeasures(mod1, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
fitmeasures(mod2, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
fitmeasures(mod3, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
# single factor model
mm1 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9 +
GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7
PSS1 + PSS2 + PSS3 + PSS4 + PSS5 + PSS6 + PSS7 + PSS8 + PSS9 + PSS10"
mod1 <- cfa(mm1, dat, estimator = "dwls", std.lv = T)
# single factor model
mm1 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9 +
GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7 +
PSS1 + PSS2 + PSS3 + PSS4 + PSS5 + PSS6 + PSS7 + PSS8 + PSS9 + PSS10"
mod1 <- cfa(mm1, dat, estimator = "dwls", std.lv = T)
data <- Clean_rp_data_092023[, c(paste0("PHQ", 1:9),
paste0("GAD", 1:7),
paste0("PSS", 1:10))]
# Data cleaning
dat <- apply(dat, MARGIN = 2, as.ordered)
dat <- na.omit(data)
# single factor model
mm1 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9 +
GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7 +
PSS1 + PSS2 + PSS3 + PSS4 + PSS5 + PSS6 + PSS7 + PSS8 + PSS9 + PSS10"
mod1 <- cfa(mm1, dat, estimator = "dwls", std.lv = T)
summary(mod1, fit.measures = T)
# three-factor model
mm2 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9
f2 =~ GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7
f3 =~ PSS1 + PSS2 + PSS3 + PSS4 + PSS5 + PSS6 + PSS7 + PSS8 + PSS9 + PSS10"
mod2 <- cfa(mm2, dat, estimator = "dwls", std.lv = T)
summary(mod2, fit.measures = T)
# correlated factor model
mm3 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9
f2 =~ GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7
f3 =~ PSS1 + PSS2 + PSS3 + PSS4 + PSS5 + PSS6 + PSS7 + PSS8 + PSS9 + PSS10
f1 ~~ f2
f1 ~~ f3
f2 ~~ f3"
mod3 <- cfa(mm3, dat, estimator = "dwls", std.lv = T)
summary(mod3, fit.measures = T)
fitmeasures(mod1, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
fitmeasures(mod2, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
fitmeasures(mod3, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
summary(mod1, fit.measures = T, standardize = T)
summary(mod3, fit.measures = T, standardize = T)
summary(mod3, fit.measures = T, std.all = T)
summary(mod3, fit.measures = T, Std.all = T)
library(readxl)
rp_data <- read_excel("E:/Data_and_Tidy/Salud mental y el uso de la tecnología durante el COVID-19(1-413).xlsx", sheet = "Poster 3 Angela")
View(rp_data)
# Data cleaning #
library(dplyr)
table(rp_data$CONSENT)
rp_data$CONSENT <- recode(rp_data$CONSENT, "No consiento a participar en este estudio de investigación." = "0", "Sí, libremente consiento a participar en este estudio de investigación. Al autorizar este consentimiento informado, no he renunciado a ninguno de mis derechos legales." = "1")
rp_data <- rp_data[-c(which(rp_data$CONSENT=="0")),]
table(rp_data$CRD_HRS)
rp_data$CRD_HRS <- recode(rp_data$CRD_HRS, "1-3" = "01-09", "4-6" = "01-09", "7-9" = "01-09", "16-18" = "16 o mas", "19-21" = "16 o mas", "Más de 21" = "16 o mas", "No estoy matriculado(a) actualmente" = "0")
rp_data <- rp_data[-c(which(rp_data$CRD_HRS=="0")),]
# Delete ilogical value for age
rp_data <- rp_data[-which(rp_data$AGE=="2"),]
# Eliminate rows with completion time of less than 8.5 minutes
library(lubridate)
# Adding a variable - time to complete survey (TIME)
rp_data$START <- as.POSIXct(rp_data$START)
rp_data$END <- as.POSIXct(rp_data$END)
rp_data$TIME <- difftime(rp_data$END, rp_data$START, units = "mins")
rp_data$TIME <- as.numeric(rp_data$TIME)
rp_data <- rp_data[-which(rp_data$TIME < 8.5),]
385/nrow(rp_data)
library(readxl)
rp_data <- read_excel("E:/Data_and_Tidy/Salud mental y el uso de la tecnología durante el COVID-19(1-413).xlsx", sheet = "Poster 3 Angela")
rp_data$CONSENT <- recode(rp_data$CONSENT, "No consiento a participar en este estudio de investigación." = "0", "Sí, libremente consiento a participar en este estudio de investigación. Al autorizar este consentimiento informado, no he renunciado a ninguno de mis derechos legales." = "1")
rp_data <- rp_data[-c(which(rp_data$CONSENT=="0")),]
rp_data$CRD_HRS <- recode(rp_data$CRD_HRS, "1-3" = "01-09", "4-6" = "01-09", "7-9" = "01-09", "16-18" = "16 o mas", "19-21" = "16 o mas", "Más de 21" = "16 o mas", "No estoy matriculado(a) actualmente" = "0")
rp_data <- rp_data[-c(which(rp_data$CRD_HRS=="0")),]
# Delete ilogical value for age
rp_data <- rp_data[-which(rp_data$AGE=="2"),]
# Adding a variable - time to complete survey (TIME)
rp_data$START <- as.POSIXct(rp_data$START)
rp_data$END <- as.POSIXct(rp_data$END)
rp_data$TIME <- difftime(rp_data$END, rp_data$START, units = "mins")
rp_data$TIME <- as.numeric(rp_data$TIME)
rp_data <- rp_data[-which(rp_data$TIME < 8.5),]
table(rp_data$HISP_ORIG)
length(which(rp_data$HISP_ORIG == "Sí, puertorriqueño(a)"))/nrow(rp_data)
round(length(which(rp_data$HISP_ORIG == "Sí, puertorriqueño(a)"))/nrow(rp_data) * 100, 2)
round(length(which(rp_data$HISP_ORIG == "Sí, puertorriqueño(a)"))/nrow(rp_data) * 100, 1)
summary(mod1, fit.measures = T, standardized = T)
summary(mod2, fit.measures = T, standardized = T)
summary(mod3, fit.measures = T, standardized = T)
# single factor model
m1 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9 +
GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7"
model1 <- cfa(m1, dat, estimator = "dwls", std.lv = T)
summary(model1, fit.measures = T, standardized = T)
# three-factor model
m2 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9
f2 =~ GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7"
model2 <- cfa(m2, dat, estimator = "dwls", std.lv = T)
summary(model2, fit.measures = T, standardized = T)
# correlated factor model
m3 <- "f1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ4 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9
f2 =~ GAD1 + GAD2 + GAD3 + GAD4 + GAD5 + GAD6 + GAD7
f1 ~~ f2"
model3 <- cfa(m3, dat, estimator = "dwls", std.lv = T)
summary(model3, fit.measures = T, Std.all = T)
fitmeasures(model1, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
fitmeasures(model2, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
fitmeasures(model3, c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper","srmr"))
# Checing multivariate normality
phq <- data[, paste0("PHQ", 1:9)]
gad <- data[, paste0("GAD", 1:7)]
pss <- data[, paste0("PSS", 1:10)]
mvn(phq)
mvn(gad)
mvn(pss)
?mvn
mvn(phq, multivariatePlot = "qq")
